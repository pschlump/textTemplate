
Must add test for fucntion call back.


	called := false
	cb := func(def string, loc parse.Pos, lf string) {
		if checkSyntax {
			called = true
			fmt.Printf("Invalid Value Used: %s %d %s\n", def, loc, lf)
		}
	}
	// t, err := template.New("simple-tempalte").Delims("-<", ">-").SetEmpty("", true).Funcs(rtFuncMap).ParseFiles(TemplateFn) // Set Template Markers
	t, err := template.New("simple-tempalte").SetEmpty("", true).SetEmptyFunc(cb).Funcs(rtFuncMap).ParseFiles(TemplateFn) // Set Template Markers


-- Change function to return "string" - use that for the "value".
	-- Pass in the "template" data.

exec.go:1043:	// errOnEmpty     bool   // if true(default) reports errors on missing values
exec.go:1045:		if s.tmpl.errOnEmpty { // PJS
template.go:39:	errOnEmpty     bool   // PJS if true(default) reports errors on missing values
template.go:41:	errOnEmptyFunc func(name, lf string) // PJS if not null, then on error call this function		-- Call funciton with name of template, lf is line/file in source called from
template.go:49:		errOnEmpty:     false,        // PJS new
template.go:75:		errOnEmpty:     false,        // PJS new
template.go:134:		errOnEmpty:     t.errOnEmpty,     // PJS
template.go:178:	t.errOnEmpty = rpt

https://github.com/pschlump/textTemplate/security/dependabot/1
